<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.thesett</groupId>
    <artifactId>libaima_native</artifactId>
    <name>aima-native-linux</name>
    <version>0.8.11-SNAPSHOT</version><!--lojix.version-->

    <description>Native implementations for AIMA for Linux.</description>
    <url>https://www.thesett.com/build_reports/lojix/aima-native/linux</url>

    <packaging>so</packaging>

    <properties>
        <topdir>${basedir}/../..</topdir>
    </properties>

    <parent>
        <groupId>com.thesett</groupId>
        <artifactId>aima-native-build</artifactId>
        <version>0.8.11-SNAPSHOT</version><!--lojix.version-->
        <relativePath>../pom.xml</relativePath>
    </parent>

    <dependencies>

        <!-- This dependency cannot be inherited from the parent pom because it is specifically for the 'tests' classifier. -->
        <dependency>
            <groupId>com.thesett</groupId>
            <artifactId>logic</artifactId>
            <classifier>tests</classifier>
            <version>0.8.11-SNAPSHOT</version><!--lojix.version-->
        </dependency>

        <dependency>
            <groupId>com.thesett</groupId>
            <artifactId>l0</artifactId>
            <classifier>tests</classifier>
            <version>0.8.11-SNAPSHOT</version><!--lojix.version-->
        </dependency>

        <dependency>
            <groupId>com.thesett</groupId>
            <artifactId>l1</artifactId>
            <classifier>tests</classifier>
            <version>0.8.11-SNAPSHOT</version><!--lojix.version-->
        </dependency>

        <dependency>
            <groupId>com.thesett</groupId>
            <artifactId>l2</artifactId>
            <classifier>tests</classifier>
            <version>0.8.11-SNAPSHOT</version><!--lojix.version-->
        </dependency>

        <dependency>
            <groupId>com.thesett</groupId>
            <artifactId>l3</artifactId>
            <classifier>tests</classifier>
            <version>0.8.11-SNAPSHOT</version><!--lojix.version-->
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- Extract headers for native implementations using javah and compile the C code using gcc. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <extensions>true</extensions>

                <configuration>

                    <!-- javah options. -->
                    <classNames>
                        <className>
                            com.thesett.aima.logic.fol.l0.L0UnifyingNativeMachine
                        </className>
                        <className>
                            com.thesett.aima.logic.fol.l1.L1UnifyingNativeMachine
                        </className>
                        <className>
                            com.thesett.aima.logic.fol.l2.L2ResolvingNativeMachine
                        </className>
                        <className>
                            com.thesett.aima.logic.fol.l3.nativemachine.L3ResolvingNativeMachine
                        </className>
                    </classNames>
                    <javahOS>linux</javahOS>

                    <!-- compiler options. -->
                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>gcc</compilerExecutable>
                    <compilerStartOptions>
                        <compilerStartOption>-g</compilerStartOption>
                        <compilerStartOption>-O4</compilerStartOption>
                        <compilerStartOption>-fno-strict-aliasing</compilerStartOption>
                        <!--<compilerStartOption>-fomit-frame-pointer</compilerStartOption>-->
                        <!--<compilerStartOption>-mtune=opteron</compilerStartOption>-->
                        <compilerStartOption>-fPIC</compilerStartOption>
                        <compilerStartOption>-pthread</compilerStartOption>
                        <compilerStartOption>-W</compilerStartOption>
                        <compilerStartOption>-Wall</compilerStartOption>
                        <compilerStartOption>-Wno-unused</compilerStartOption>
                        <compilerStartOption>-Wno-parentheses</compilerStartOption>
                        <compilerStartOption>-DNDEBUG</compilerStartOption>
                        <!--<compilerStartOption>-Di586</compilerStartOption>
                        <compilerStartOption>-DARCH="i586"</compilerStartOption>-->
                        <compilerStartOption>-DLINUX</compilerStartOption>
                        <compilerStartOption>-D_LARGEFILE64_SOURCE</compilerStartOption>
                        <compilerStartOption>-D_GNU_SOURCE</compilerStartOption>
                        <compilerStartOption>-D_REENTRANT</compilerStartOption>
                        <compilerStartOption>-D_LITTLE_ENDIAN</compilerStartOption>
                    </compilerStartOptions>

                    <sources>
                        <source>
                            <directory>../src/c</directory>
                            <includes>
                                <include>*.c</include>
                            </includes>
                        </source>
                    </sources>

                    <!-- linker options. -->
                    <linkerExecutable>gcc</linkerExecutable>
                    <linkerStartOptions>
                        <linkerStartOption>-g</linkerStartOption>
                        <linkerStartOption>-Wl,-O1</linkerStartOption>
                        <linkerStartOption>-z defs</linkerStartOption>
                        <linkerStartOption>-Wl,-soname=libaima_native.so</linkerStartOption>
                        <linkerStartOption>-static-libgcc</linkerStartOption>
                        <linkerStartOption>-shared</linkerStartOption>
                        <linkerStartOption>-mimpure-text</linkerStartOption>
                    </linkerStartOptions>

                </configuration>

                <executions>
                    <execution>
                        <id>native-headers</id>
                        <goals>
                            <goal>javah</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>

            <!-- Runs the unit tests with LD_LIBRARY_PATH set to pick up the native shared library. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>log4j.configuration</name>
                            <value>${log4j.configuration}</value>
                        </property>
                    </systemProperties>
                    <environmentVariables>
                        <LD_LIBRARY_PATH>${basedir}/target</LD_LIBRARY_PATH>
                    </environmentVariables>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
